window.indexedDB=window.indexedDB||window.webkitIndexedDB||window.mozIndexedDB,"webkitIndexedDB"in window&&(window.IDBTransaction=window.webkitIDBTransaction,window.IDBKeyRange=window.webkitIDBKeyRange),imhere.IndexedDbAPI=function(){this.iDB={}},imhere.IndexedDbAPI.prototype.openDB=function(){var e=new $.Deferred,r=this,o=indexedDB.open("imhereDB",1);return o.onsuccess=function(){r.iDB=o.result,e.resolve()},o.onerror=function(r){console.log("IndexedDB error: "+r.target.errorCode),e.reject("IndexedDB error: "+r.target.errorCode)},o.onupgradeneeded=function(e){r.iDB=o.result,r.iDB.objectStoreNames.contains("atokenStore")&&o.result.deleteObjectStore("atokenStore");e.target.result.createObjectStore("atokenStore",{keyPath:"rservice"});console.log("objectStore defined.")},e.promise()},imhere.IndexedDbAPI.prototype.searchToken=function(e){var r=new $.Deferred,o=this.iDB,t=o.transaction(["atokenStore"],"readwrite"),n=t.objectStore("atokenStore"),d=n.get(e);return d.onsuccess=function(e){var o=e.target.result;r.resolve(o)},d.onerror=function(e){console.log("IndexedDB error: "+e.target.errorCode),r.reject("IndexedDB error: "+e.target.errorCode)},r.promise()},imhere.IndexedDbAPI.prototype.addToken=function(e,r){var o=new $.Deferred,t=this.iDB,n=t.transaction(["atokenStore"],"readwrite"),d=n.objectStore("atokenStore"),i={rservice:e,at:r.at,ats:r.ats},c=d.put(i);return c.onsuccess=function(e){console.log("Success Adding: ",e),o.resolve()},c.onerror=function(e){console.log("IndexedDB error: "+e.target.errorCode),o.reject("IndexedDB error: "+e.target.errorCode)},o.promise()},imhere.IndexedDbAPI.prototype.deleteToken=function(e){var r=new $.Deferred,o=this.iDB,t=o.transaction(["atokenStore"],"readwrite"),n=t.objectStore("atokenStore"),d=n.delete(e);return d.onsuccess=function(e){console.log("Success Adding: ",e),r.resolve()},d.onerror=function(e){console.log("IndexedDB error: "+e.target.errorCode),r.reject("IndexedDB error: "+e.target.errorCode)},r.promise()};